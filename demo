#!/bin/bash

source .demoscript
set -e

[[ -z "${USESAVED}" ]] && (
echo "Cleaning..."
set +e
kubectl delete ksvc/hello ksvc/hub cm/source taskrun/build-image
kubectl delete buildtemplate/kaniko
) &> /dev/null || true

[[ "${1}" != "--clean" ]] || exit 0

export PATH=.:$PATH
export RETRYONFAIL=1

if [[ -z "${USESAVED}" ]]; then
  if ! kubectl get ns tekton-pipelines &> /dev/null ; then
    comment "Installing Tekton"
    doit kubectl apply -f \
        https://storage.googleapis.com/tekton-releases/latest/release.yaml
  fi
fi

comment "Create the Docker Registry Knative Service"
doit kn service create hub --image docker.io/registry --port 5000 \
	--min-scale=1 --max-scale=1
HUB_URL=$(tail -1 out)
export HUB_URL=${HUB_URL:7}

comment "Create a configMap to hold the source code of the 'hello' app"
doit ls -l src
doit kubectl create cm source --from-file=src

comment "Create the build 'task' and 'taskrun' - basically, do the build"
scroll task.yaml
doit kapply task.yaml

comment "Wait for it to finish..."
skip=1 doit --untilgrep=True  kubectl get taskrun/build-image
# pod=$(kubectl get pods | grep build-image | sed "s/ .*//")
# doit kubectl log ${pod}

comment "Create the 'hello' Knative Service using the image"
doit kn service create hello --image $HUB_URL:443/hello
URL=$(tail -1 out)

comment "Curl it"
doit curl -s $URL

comment "Clean up"
doit $0 --clean
